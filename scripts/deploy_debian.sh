#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –Ω–∞ Debian VDS
set -e

echo "üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ Python API Server —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–∏–¥–µ–æ –Ω–∞ Debian..."

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã
echo "üì¶ –û–±–Ω–æ–≤–ª—è–µ–º —Å–∏—Å—Ç–µ–º—É..."
apt update && apt upgrade -y

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–∞–∫–µ—Ç–æ–≤ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–∏–¥–µ–æ (–±–µ–∑ GUI)
echo "üé• –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–∏–¥–µ–æ..."
apt install -y \
    python3 \
    python3-pip \
    python3-venv \
    python3-dev \
    build-essential \
    cmake \
    pkg-config \
    libjpeg-dev \
    libtiff5-dev \
    libpng-dev \
    libavcodec-dev \
    libavformat-dev \
    libswscale-dev \
    libv4l-dev \
    libxvidcore-dev \
    libx264-dev \
    gfortran \
    wget \
    curl \
    git \
    unzip \
    ffmpeg \
    rsync

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker
echo "üê≥ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker..."
if ! command -v docker &> /dev/null; then
    curl -fsSL https://get.docker.com -o get-docker.sh
    sh get-docker.sh
    usermod -aG docker $USER
    rm get-docker.sh
    echo "‚úÖ Docker —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
else
    echo "‚úÖ Docker —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
fi

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker Compose
echo "üîß –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker Compose..."
if ! command -v docker-compose &> /dev/null; then
    curl -L "https://github.com/docker/compose/releases/download/v2.21.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
    chmod +x /usr/local/bin/docker-compose
    echo "‚úÖ Docker Compose —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
else
    echo "‚úÖ Docker Compose —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
fi

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ñ–∞–π—Ä–≤–æ–ª–∞
echo "üî• –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Ñ–∞–π—Ä–≤–æ–ª..."
ufw --force enable
ufw allow 22
ufw allow 80
ufw allow 443
ufw allow 8000

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞
echo "üìÅ –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞..."
mkdir -p /opt/python-api-server
cd /opt/python-api-server

# –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞ –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
if [ ! -f .env ]; then
    echo "‚öôÔ∏è –°–æ–∑–¥–∞–µ–º .env —Ñ–∞–π–ª..."
    cat > .env << EOF
HOST=0.0.0.0
PORT=8000
DEBUG=False
SECRET_KEY=$(openssl rand -hex 32)
API_TOKEN=$(openssl rand -hex 32)
DATABASE_URL=sqlite:///./app.db
REDIS_URL=redis://redis:6379/0
LOG_LEVEL=INFO
UPLOAD_DIR=/app/uploads
OUTPUT_DIR=/app/outputs
MAX_FILE_SIZE=500MB
EOF
    echo "‚úÖ .env —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω"
else
    echo "‚úÖ .env —Ñ–∞–π–ª —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
fi

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π –¥–ª—è –∑–∞–≥—Ä—É–∑–æ–∫ –∏ –≤—ã—Ö–æ–¥–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
echo "üìÇ –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è —Ñ–∞–π–ª–æ–≤..."
mkdir -p uploads outputs logs

# –°–æ–∑–¥–∞–Ω–∏–µ systemd —Å–µ—Ä–≤–∏—Å–∞ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∑–∞–ø—É—Å–∫–∞
echo "üîß –°–æ–∑–¥–∞–µ–º systemd —Å–µ—Ä–≤–∏—Å..."
cat > /etc/systemd/system/python-api-server.service << EOF
[Unit]
Description=Python API Server with Dive Color Corrector
After=network.target

[Service]
User=root
WorkingDirectory=/opt/python-api-server
ExecStart=/usr/local/bin/docker-compose up -d
ExecStop=/usr/local/bin/docker-compose down
Restart=always
RestartSec=10

[Install]
WantedBy=multi-user.target
EOF

# –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ systemd –∏ –≤–∫–ª—é—á–µ–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞
systemctl daemon-reload
systemctl enable python-api-server.service

# –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
echo "üìù –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è..."
cat > /opt/python-api-server/update.sh << 'EOF'
#!/bin/bash
set -e

echo "üîÑ –û–±–Ω–æ–≤–ª—è–µ–º Python API Server..."

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–∞
systemctl stop python-api-server.service

# –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞
if [ -d "backup" ]; then
    rm -rf backup
fi
mkdir backup
cp -r . backup/ 2>/dev/null || true

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
docker-compose down 2>/dev/null || true

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–¥–∞ (–µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è git)
if [ -d ".git" ]; then
    git pull origin main
fi

# –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫
docker-compose up -d --build

# –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–∞
systemctl start python-api-server.service

echo "‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
EOF

chmod +x /opt/python-api-server/update.sh

# –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
echo "üìä –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞..."
cat > /opt/python-api-server/monitor.sh << 'EOF'
#!/bin/bash

echo "üìä –°—Ç–∞—Ç—É—Å Python API Server:"
echo "================================"

# –°—Ç–∞—Ç—É—Å systemd —Å–µ—Ä–≤–∏—Å–∞
echo "üîß Systemd —Å–µ—Ä–≤–∏—Å:"
systemctl status python-api-server.service --no-pager -l

echo ""
echo "üê≥ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã:"
docker-compose ps

echo ""
echo "üíæ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–∏—Å–∫–∞:"
df -h /opt/python-api-server

echo ""
echo "üß† –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏:"
free -h

echo ""
echo "üìÅ –†–∞–∑–º–µ—Ä –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π:"
du -sh uploads outputs logs 2>/dev/null || echo "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"

echo ""
echo "üåê –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ API:"
if curl -f http://localhost:8000/health > /dev/null 2>&1; then
    echo "‚úÖ API –¥–æ—Å—Ç—É–ø–µ–Ω"
else
    echo "‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
fi
EOF

chmod +x /opt/python-api-server/monitor.sh

# –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –¥–∏—Å–∫–∞
echo "üßπ –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç –æ—á–∏—Å—Ç–∫–∏ –¥–∏—Å–∫–∞..."
cat > /opt/cleanup.sh << 'EOF'
#!/bin/bash
echo "Starting server cleanup..."

# Clean Docker
echo "Cleaning Docker system..."
docker system prune -a --volumes -f

# Clean APT cache
echo "Cleaning APT cache..."
apt clean
apt autoremove -y

# Clean old journal logs (keep last 7 days)
echo "Cleaning old journal logs..."
journalctl --vacuum-time=7d

# Clean temporary files
echo "Cleaning temporary files..."
rm -rf /tmp/* /var/tmp/*

# Clean project-specific output files (if any)
echo "Cleaning project output files..."
rm -rf /opt/python-api-server/outputs/*

echo "Server cleanup complete."
EOF

chmod +x /opt/cleanup.sh

# –°–æ–∑–¥–∞–Ω–∏–µ cron –∑–∞–¥–∞—á–∏ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —Å—Ç–∞—Ä—ã—Ö —Ñ–∞–π–ª–æ–≤
echo "‚è∞ –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é –æ—á–∏—Å—Ç–∫—É —Ñ–∞–π–ª–æ–≤..."
cat > /opt/python-api-server/cleanup.sh << 'EOF'
#!/bin/bash
# –û—á–∏—Å—Ç–∫–∞ —Ñ–∞–π–ª–æ–≤ —Å—Ç–∞—Ä—à–µ 7 –¥–Ω–µ–π
find /opt/python-api-server/uploads -type f -mtime +7 -delete 2>/dev/null || true
find /opt/python-api-server/outputs -type f -mtime +7 -delete 2>/dev/null || true
find /opt/python-api-server/logs -type f -mtime +30 -delete 2>/dev/null || true
EOF

chmod +x /opt/python-api-server/cleanup.sh

# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ cron –∑–∞–¥–∞—á–∏
(crontab -l 2>/dev/null; echo "0 2 * * * /opt/python-api-server/cleanup.sh") | crontab -

echo "üéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–∏—Å—Ç–µ–º—ã –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
echo ""
echo "üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
echo "1. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª—ã –ø—Ä–æ–µ–∫—Ç–∞ –≤ /opt/python-api-server/"
echo "2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: systemctl start python-api-server.service"
echo "3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å: /opt/python-api-server/monitor.sh"
echo ""
echo "üîß –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "  systemctl status python-api-server.service  # –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–∞"
echo "  systemctl start python-api-server.service   # –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–∞"
echo "  systemctl stop python-api-server.service    # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–∞"
echo "  systemctl restart python-api-server.service # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–∞"
echo "  /opt/python-api-server/monitor.sh           # –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥"
echo "  /opt/python-api-server/update.sh            # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ"
echo "  /opt/cleanup.sh                             # –û—á–∏—Å—Ç–∫–∞ –¥–∏—Å–∫–∞"
echo ""
echo "üåê –ü–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞ API –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://$(curl -s ifconfig.me):8000"
echo "üìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è API: http://$(curl -s ifconfig.me):8000/docs"
echo "üì± –ú–æ–±–∏–ª—å–Ω—ã–π API: http://$(curl -s ifconfig.me):8000/api/mobile/status"
echo ""
echo "‚ö†Ô∏è  –í–∞–∂–Ω–æ: API —Ä–∞–±–æ—Ç–∞–µ—Ç –±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –¥–ª—è —É–ø—Ä–æ—â–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è"
