#!/bin/bash

# –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Å–∫—Ä–∏–ø—Ç —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è Python API Server
# –ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è Debian/Ubuntu
set -e

echo "üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ Python API Server —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–∏–¥–µ–æ..."
echo "üìã –û–±–Ω–∞—Ä—É–∂–µ–Ω–Ω–∞—è –û–°: $(lsb_release -d 2>/dev/null | cut -f2 || echo "Debian/Ubuntu")"

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã
echo "üì¶ –û–±–Ω–æ–≤–ª—è–µ–º —Å–∏—Å—Ç–µ–º—É..."
apt update && apt upgrade -y

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–∞–∫–µ—Ç–æ–≤ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–∏–¥–µ–æ
echo "üé• –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–∏–¥–µ–æ..."
apt install -y \
    python3 \
    python3-pip \
    python3-venv \
    python3-dev \
    build-essential \
    cmake \
    pkg-config \
    libjpeg-dev \
    libtiff5-dev \
    libpng-dev \
    libavcodec-dev \
    libavformat-dev \
    libswscale-dev \
    libv4l-dev \
    libxvidcore-dev \
    libx264-dev \
    gfortran \
    wget \
    curl \
    git \
    unzip \
    ffmpeg \
    rsync \
    sshpass

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker
echo "üê≥ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker..."
if ! command -v docker &> /dev/null; then
    curl -fsSL https://get.docker.com -o get-docker.sh
    sh get-docker.sh
    usermod -aG docker $USER
    rm get-docker.sh
    echo "‚úÖ Docker —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
else
    echo "‚úÖ Docker —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
fi

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker Compose
echo "üîß –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker Compose..."
if ! command -v docker-compose &> /dev/null; then
    curl -L "https://github.com/docker/compose/releases/download/v2.21.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
    chmod +x /usr/local/bin/docker-compose
    echo "‚úÖ Docker Compose —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
else
    echo "‚úÖ Docker Compose —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
fi

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ñ–∞–π—Ä–≤–æ–ª–∞ (—Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –Ω–∞–ª–∏—á–∏—è)
echo "üî• –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Ñ–∞–π—Ä–≤–æ–ª..."
if command -v ufw &> /dev/null; then
    ufw --force enable
    ufw allow 22
    ufw allow 80
    ufw allow 443
    echo "‚úÖ –§–∞–π—Ä–≤–æ–ª –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
else
    echo "‚ö†Ô∏è ufw –Ω–µ –Ω–∞–π–¥–µ–Ω, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º..."
    apt install -y ufw
    ufw --force enable
    ufw allow 22
    ufw allow 80
    ufw allow 443
    echo "‚úÖ –§–∞–π—Ä–≤–æ–ª —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
fi

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞
echo "üìÅ –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞..."
mkdir -p /opt/dive-color-corrector
cd /opt/dive-color-corrector

# –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞ –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
if [ ! -f .env ]; then
    echo "‚öôÔ∏è –°–æ–∑–¥–∞–µ–º .env —Ñ–∞–π–ª..."
    cat > .env << EOF
HOST=0.0.0.0
PORT=8080
DEBUG=False
SECRET_KEY=$(openssl rand -hex 32)
API_TOKEN=$(openssl rand -hex 32)
DATABASE_URL=sqlite:///./app.db
REDIS_URL=redis://redis:6379/0
LOG_LEVEL=INFO
UPLOAD_DIR=/app/uploads
OUTPUT_DIR=/app/outputs
MAX_FILE_SIZE=500MB
EOF
    echo "‚úÖ .env —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω"
else
    echo "‚úÖ .env —Ñ–∞–π–ª —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
fi

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π –¥–ª—è –∑–∞–≥—Ä—É–∑–æ–∫ –∏ –≤—ã—Ö–æ–¥–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
echo "üìÇ –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è —Ñ–∞–π–ª–æ–≤..."
mkdir -p uploads outputs logs

# –°–æ–∑–¥–∞–Ω–∏–µ systemd —Å–µ—Ä–≤–∏—Å–∞ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∑–∞–ø—É—Å–∫–∞
echo "üîß –°–æ–∑–¥–∞–µ–º systemd —Å–µ—Ä–≤–∏—Å..."
cat > /etc/systemd/system/dive-color-corrector.service << EOF
[Unit]
Description=Python API Server with Dive Color Corrector
After=network.target

[Service]
User=root
WorkingDirectory=/opt/dive-color-corrector
ExecStart=/usr/local/bin/docker-compose up -d
ExecStop=/usr/local/bin/docker-compose down
Restart=always
RestartSec=10

[Install]
WantedBy=multi-user.target
EOF

# –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ systemd –∏ –≤–∫–ª—é—á–µ–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞
systemctl daemon-reload
systemctl enable dive-color-corrector.service

# –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
echo "üìù –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è..."
cat > /opt/dive-color-corrector/update.sh << 'EOF'
#!/bin/bash
set -e

echo "üîÑ –û–±–Ω–æ–≤–ª—è–µ–º Python API Server..."

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–∞
systemctl stop dive-color-corrector.service

# –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞
if [ -d "backup" ]; then
    rm -rf backup
fi
mkdir backup
cp -r . backup/ 2>/dev/null || true

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
docker-compose down 2>/dev/null || true

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–¥–∞ (–µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è git)
if [ -d ".git" ]; then
    git pull origin main
fi

# –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫
docker-compose up -d --build

# –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–∞
systemctl start dive-color-corrector.service

echo "‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
EOF

chmod +x /opt/dive-color-corrector/update.sh

# –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
echo "üìä –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞..."
cat > /opt/dive-color-corrector/monitor.sh << 'EOF'
#!/bin/bash

echo "üìä –°—Ç–∞—Ç—É—Å Python API Server:"
echo "================================"

# –°—Ç–∞—Ç—É—Å systemd —Å–µ—Ä–≤–∏—Å–∞
echo "üîß Systemd —Å–µ—Ä–≤–∏—Å:"
systemctl status dive-color-corrector.service --no-pager -l

echo ""
echo "üê≥ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã:"
docker-compose ps

echo ""
echo "üíæ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–∏—Å–∫–∞:"
df -h /opt/dive-color-corrector

echo ""
echo "üß† –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏:"
free -h

echo ""
echo "üìÅ –†–∞–∑–º–µ—Ä –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π:"
du -sh uploads outputs logs 2>/dev/null || echo "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"

echo ""
echo "üåê –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ API:"
if curl -f http://localhost/health > /dev/null 2>&1; then
    echo "‚úÖ API –¥–æ—Å—Ç—É–ø–µ–Ω"
else
    echo "‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
fi
EOF

chmod +x /opt/dive-color-corrector/monitor.sh

# –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –¥–∏—Å–∫–∞ (–º—è–≥–∫–∞—è –≤–µ—Ä—Å–∏—è)
echo "üßπ –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç –æ—á–∏—Å—Ç–∫–∏ –¥–∏—Å–∫–∞..."
cat > /opt/disk_cleanup.sh << 'EOF'
#!/bin/bash

echo "üßπ –ù–∞—á–∏–Ω–∞–µ–º –º—è–≥–∫—É—é –æ—á–∏—Å—Ç–∫—É –¥–∏—Å–∫–∞..."
echo "–î–∞—Ç–∞: $(date)"
echo

echo "üìä –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–∏—Å–∫–∞ –î–û –æ—á–∏—Å—Ç–∫–∏:"
df -h /
echo

echo "üê≥ –û—á–∏—â–∞–µ–º –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ Docker –æ–±—Ä–∞–∑—ã..."
docker image prune -f
echo

echo "üì¶ –û—á–∏—â–∞–µ–º APT –∫—ç—à..."
apt clean
apt autoremove -y
echo

echo "üìù –û—á–∏—â–∞–µ–º –ª–æ–≥–∏ (—Å—Ç–∞—Ä—à–µ 7 –¥–Ω–µ–π)..."
journalctl --vacuum-time=7d
echo

echo "üóëÔ∏è –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã (—Å—Ç–∞—Ä—à–µ 3 –¥–Ω–µ–π)..."
find /tmp -type f -atime +3 -delete 2>/dev/null || true
find /var/tmp -type f -atime +3 -delete 2>/dev/null || true
echo

echo "üìä –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–∏—Å–∫–∞ –ü–û–°–õ–ï –æ—á–∏—Å—Ç–∫–∏:"
df -h /
echo

echo "‚úÖ –ú—è–≥–∫–∞—è –æ—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
EOF

chmod +x /opt/disk_cleanup.sh

# –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –¥–∏—Å–∫–∞
echo "üìä –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –¥–∏—Å–∫–∞..."
cat > /opt/check_disk.sh << 'EOF'
#!/bin/bash

echo "üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –¥–∏—Å–∫–∞:"
echo "–î–∞—Ç–∞: $(date)"
echo

echo "üíæ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–∏—Å–∫–∞:"
df -h /
echo

echo "üê≥ Docker:"
docker system df
echo

echo "üì¶ –¢–æ–ø –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏:"
du -sh /var/* 2>/dev/null | sort -hr | head -5
echo

echo "üß† –ü–∞–º—è—Ç—å:"
free -h
echo

echo "üìà –ù–∞–≥—Ä—É–∑–∫–∞:"
uptime
EOF

chmod +x /opt/check_disk.sh

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –æ—á–∏—Å—Ç–∫–∏ –¥–∏—Å–∫–∞ —á–µ—Ä–µ–∑ cron (–µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ)
echo "‚è∞ –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω—É—é –æ—á–∏—Å—Ç–∫—É –¥–∏—Å–∫–∞..."
echo "0 3 * * 0 /opt/disk_cleanup.sh >> /var/log/disk_cleanup.log 2>&1" | crontab -

echo "üéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–∏—Å—Ç–µ–º—ã –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
echo ""
echo "üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
echo "1. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª—ã –ø—Ä–æ–µ–∫—Ç–∞ –≤ /opt/dive-color-corrector/"
echo "2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: systemctl start dive-color-corrector.service"
echo "3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å: /opt/dive-color-corrector/monitor.sh"
echo ""
echo "üîß –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "  systemctl status dive-color-corrector.service  # –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–∞"
echo "  systemctl start dive-color-corrector.service   # –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–∞"
echo "  systemctl stop dive-color-corrector.service    # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–∞"
echo "  systemctl restart dive-color-corrector.service # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–∞"
echo "  /opt/dive-color-corrector/monitor.sh           # –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ API"
echo "  /opt/dive-color-corrector/update.sh            # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ"
echo "  /opt/disk_cleanup.sh                        # –ú—è–≥–∫–∞—è –æ—á–∏—Å—Ç–∫–∞ –¥–∏—Å–∫–∞"
echo "  /opt/check_disk.sh                          # –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –¥–∏—Å–∫–∞"
echo ""
echo "üåê –ü–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞ API –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://$(curl -s ifconfig.me)"
echo "üìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è API: http://$(curl -s ifconfig.me)/docs"
echo "üì± –ú–æ–±–∏–ª—å–Ω—ã–π API: http://$(curl -s ifconfig.me)/api/mobile/status"
echo ""
echo "‚ú® –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –≤–µ—Ä—Å–∏–∏:"
echo "  üöÄ –ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è Debian –∏ Ubuntu"
echo "  üßπ –ú—è–≥–∫–∞—è –æ—á–∏—Å—Ç–∫–∞ –¥–∏—Å–∫–∞ (–µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ)"
echo "  üìä –ü–æ–ª–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–∏—Å—Ç–µ–º—ã"
echo "  üê≥ –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ (API, Redis, Nginx)"
echo "  ‚ö†Ô∏è  API —Ä–∞–±–æ—Ç–∞–µ—Ç –±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –¥–ª—è —É–ø—Ä–æ—â–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è"
